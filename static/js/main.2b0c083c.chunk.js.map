{"version":3,"sources":["components/draw.js","components/Animation.js","components/InputGraph.js","components/InputColor.js","components/Form.js","components/App.js","serviceWorker.js","index.js"],"names":["draw","ctx","animationFrameId","width","height","tmax","reuse","condition","x","y","t","r","g","b","a","imgData","getImageData","canvas","createImageData","pixels","data","xc","yc","i","length","Math","floor","k","graph","red","blue","green","alpha","putImageData","Animation","props","canvasReference","useRef","useEffect","current","getContext","render","window","requestAnimationFrame","cancelAnimationFrame","className","ref","InputGraph","equation","inputValid","component","handleChange","handleSubmit","name","id","value","onChange","onClick","type","checked","InputColor","Form","validity","inputColor","map","item","App","min","innerWidth","innerHeight","useState","setTmax","setReuse","operation","setOperation","setEquation","useReducer","state","action","stateNew","forEach","push","op","eq","console","log","input","changeInput","setValidity","useCallback","Function","inputToString","generateComponent","inputString","event","target","preventDefault","inputValidity","trim","evaluateValidity","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2b0c083c.chunk.js","sourcesContent":["function draw(ctx, animationFrameId, width, height, tmax, reuse, condition) {\r\n    const imgData = reuse ? ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height) : ctx.createImageData(ctx.canvas.width, ctx.canvas.height);\r\n    var pixels = imgData.data;\r\n\r\n    for (var x, y, t, r, g, b, a, xc = 0, yc = 0, i = 0; i < pixels.length; i += 4, xc++) {\r\n        if (xc === width) {\r\n            xc = 0;\r\n            yc++;\r\n        }\r\n        x = xc + 1 - Math.floor(width / 2);\r\n        y = Math.floor(height / 2) - yc;\r\n\r\n        const k = animationFrameId % (2 * tmax);\r\n        if (k < tmax) t = k;\r\n        else t = 2 * tmax - k - 1;\r\n\r\n        r = pixels[i];\r\n        g = pixels[i + 1];\r\n        b = pixels[i + 2];\r\n        a = pixels[i + 3];\r\n\r\n        if (condition.graph(x, y, t, r, g, b, a)) {\r\n            pixels[i] = condition.red(x, y, t, r, g, b, a);\r\n            pixels[i + 1] = condition.blue(x, y, t, r, g, b, a);\r\n            pixels[i + 2] = condition.green(x, y, t, r, g, b, a);\r\n        }\r\n        pixels[i + 3] = condition.alpha(x, y, t, r, g, b, a);\r\n    }\r\n\r\n    ctx.putImageData(imgData, 0, 0);\r\n}\r\n\r\nexport default draw;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useRef, useEffect } from 'react';\r\nimport draw from './draw';\r\n\r\nfunction Animation(props) {\r\n  const { width, height, tmax,  reuse, condition } = props;\r\n  const canvasReference = useRef(null);\r\n\r\n  useEffect(() => {\r\n    var ctx = canvasReference.current.getContext('2d');\r\n    var animationFrameId = 0;\r\n    function render() {\r\n      draw(ctx, animationFrameId, width, height, tmax, reuse, condition);\r\n      animationFrameId = window.requestAnimationFrame(render);\r\n    }\r\n    render();\r\n    return () => { window.cancelAnimationFrame(animationFrameId) };\r\n  }, [width, height, tmax, reuse, condition]);\r\n\r\n  return (\r\n    <canvas\r\n      className='animation'\r\n      ref={canvasReference}\r\n      width={width}\r\n      height={height}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Animation;\r\n","import React from 'react';\r\n\r\nfunction InputGraph(props) {\r\n    const { tmax, reuse, equation, inputValid, component, handleChange, handleSubmit } = props;\r\n\r\n    return (\r\n        <div className='graph'>\r\n            <div className='row'>\r\n                <label className='graph-title'> graph </label><br />\r\n                <div className='column'>\r\n                    <label> Equation </label><br />\r\n                    <textarea name='equation' id='graph' value={equation} onChange={handleChange} /><br />\r\n                    <label> Operation </label>\r\n                    <select name='operation' id='graph' onChange={handleChange}>\r\n                        <option></option>\r\n                        <option value='&&'> AND </option>\r\n                        <option value='||'> OR </option>\r\n                    </select>\r\n                    <button id='graph' onClick={handleSubmit}> Add </button><br />\r\n                    {!inputValid && <span className='error-message'>invalid syntax</span>}\r\n                    <br /><label> T Max </label><br />\r\n                    <input type='number' name='tmax' value={tmax} onChange={handleChange} /><br />\r\n                    <input type='checkbox' name='reuse' checked={reuse} onChange={handleChange} />\r\n                    <label> Reuse Canvas </label>\r\n                </div>\r\n                <div className='column'>\r\n                    {component}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default InputGraph;\r\n","import React from 'react';\r\n\r\nfunction InputColor(props) {\r\n    const { id, equation, inputValid, component, handleChange, handleSubmit } = props;\r\n    return (\r\n        <div className={id}>\r\n            <div className='row'>\r\n                <label className={id + '-title'}> {id} </label><br />\r\n                <div className='column'>\r\n                    <label> Equation </label><br />\r\n                    <textarea name='equation' id={id} value={equation} onChange={handleChange} /><br />\r\n                    <label> Operation </label>\r\n                    <select name='operation' id={id} onChange={handleChange}>\r\n                        <option></option>\r\n                        <option value='+'> + </option>\r\n                        <option value='-'> - </option>\r\n                        <option value='*'> * </option>\r\n                        <option value='/'> / </option>\r\n                        <option value='%'> % </option>\r\n                    </select>\r\n                    <button id={id} onClick={handleSubmit}> Add </button><br />\r\n                    {!inputValid ? <span className='error-message'>invalid syntax</span> : <br />}\r\n                </div>\r\n                <div className='column'>\r\n                    {component}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default InputColor;\r\n","import React from 'react';\r\nimport InputGraph from './InputGraph';\r\nimport InputColor from './InputColor';\r\n\r\nfunction Form(props) {\r\n    const { tmax, reuse, equation, validity, component, handleChange, handleSubmit } = props;\r\n    const inputColor = ['red', 'green', 'blue', 'alpha'].map((item) => {\r\n        return <InputColor\r\n            key={item}\r\n            id={item}\r\n            equation={equation[item]}\r\n            inputValid={validity[item]}\r\n            component={component[item]}\r\n            handleChange={handleChange}\r\n            handleSubmit={handleSubmit} />\r\n    });\r\n\r\n    return (\r\n        <div className='form'>\r\n            <InputGraph\r\n                tmax={tmax}\r\n                reuse={reuse}\r\n                equation={equation.graph}\r\n                inputValid={validity.graph}\r\n                component={component.graph}\r\n                handleChange={handleChange}\r\n                handleSubmit={handleSubmit} />\r\n            {inputColor}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Form;\r\n","/* eslint-disable no-unused-vars */\n/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-new-func */\nimport React, { useState, useCallback, useReducer } from 'react';\nimport Animation from './Animation';\nimport Form from './Form';\n\nfunction App() {\n  const width = Math.min(window.innerWidth - 8, window.innerHeight - 8);\n  const height = width;\n  const [tmax, setTmax] = useState(150);\n  const [reuse, setReuse] = useState(false);\n  const [operation, setOperation] = useState({\n    graph: null,\n    red: null,\n    green: null,\n    blue: null,\n    alpha: null\n  });\n  const [equation, setEquation] = useState({\n    graph: '',\n    red: '',\n    green: '',\n    blue: '',\n    alpha: ''\n  });\n  const [input, changeInput] = useReducer(\n    (state, action) => {\n      const { name, id, value } = action;\n      var stateNew = [];\n      if (name === 'equation') {\n        state[id].forEach((item) => { stateNew.push(item) });\n        stateNew.push({ op: operation[id], eq: equation[id] });\n        if (stateNew.length === 1) stateNew[0].op = null;\n      } else if (name === 'remove') {\n        state[id].forEach((item) => { if (item.eq !== value) stateNew.push(item) });\n        if (stateNew[0] && stateNew[0].op) stateNew[0].op = null;\n      }\n      console.log(0);\n      return { ...state, [id]: stateNew };\n    },\n    {\n      graph: [\n        {\n          op: null,\n          eq: 'Math.sin(x*Math.pow(t, 0.2)) > Math.cos(y*Math.pow(t, 0.2))'\n        },\n        {\n          op: '&&',\n          eq: 'x*x + y*y < t*t'\n        }\n      ],\n      red: [\n        {\n          op: null,\n          eq: '(3 * t) % 256'\n        }\n      ],\n      green: [\n        {\n          op: null,\n          eq: '(5 * t) % 256'\n        }\n      ],\n      blue: [\n        {\n          op: null,\n          eq: '(2 * t) % 256'\n        }\n      ],\n      alpha: [\n        {\n          op: null,\n          eq: '255'\n        }\n      ]\n    }\n  );\n  const [validity, setValidity] = useState({\n    graph: true,\n    red: true,\n    green: true,\n    blue: true,\n    alpha: true\n  });\n  const condition = {\n    graph: useCallback(\n      new Function('x', 'y', 't', 'r', 'g', 'b', 'a', 'return ' + inputToString('graph')),\n      [input.graph]\n    ),\n    red: useCallback(\n      new Function('x', 'y', 't', 'r', 'g', 'b', 'a', 'return ' + inputToString('red')),\n      [input.red]\n    ),\n    green: useCallback(\n      new Function('x', 'y', 't', 'r', 'g', 'b', 'a', 'return ' + inputToString('green')),\n      [input.green]\n    ),\n    blue: useCallback(\n      new Function('x', 'y', 't', 'r', 'g', 'b', 'a', 'return ' + inputToString('blue')),\n      [input.blue]\n    ),\n    alpha: useCallback(\n      new Function('x', 'y', 't', 'r', 'g', 'b', 'a', 'return ' + inputToString('alpha')),\n      [input.alpha]\n    )\n  };\n  const component = {\n    graph: useCallback(\n      generateComponent('graph'),\n      [input.graph]\n    ),\n    red: useCallback(\n      generateComponent('red'),\n      [input.red]\n    ),\n    green: useCallback(\n      generateComponent('green'),\n      [input.green]\n    ),\n    blue: useCallback(\n      generateComponent('blue'),\n      [input.blue]\n    ),\n    alpha: useCallback(\n      generateComponent('alpha'),\n      [input.alpha]\n    )\n  };\n\n  function inputToString(id) {\n    var inputString = '';\n    input[id].forEach((item) => {\n      if (item.op)\n        inputString += item.op;\n      inputString += item.eq;\n    });\n    return inputString;\n  }\n  function generateComponent(id) {\n    return input[id].map((item) => {\n      var inputString = '';\n      if (item.op)\n        inputString += item.op === '&&' ? 'AND ' : item.op === '||' ? 'OR' : item.op;\n      inputString += item.eq;\n      return (\n        <div key={item.eq}>\n          <button\n            name='remove'\n            id={id}\n            value={item.eq}\n            onClick={handleChange}> X </button>\n          <span> {inputString} </span>\n        </div>\n      );\n    });\n  }\n  function evaluateValidity(id) {\n    const op = operation[id];\n    const eq = equation[id];\n    // evaluates that opInput exists\n    // evaluates that eqInput is a valid inequality\n    if ((!op && input[id].length > 0) || eq.trim().length === 0)\n      return false;\n    else\n      for (var i = 0; i < input[id].length; i++)\n        if (input[id][i].eq === eq) return false;\n    return true;\n  }\n  function handleChange(event) {\n    const { name, id, value, checked } = event.target;\n    if (name === 'tmax') setTmax(value);\n    else if (name === 'reuse') setReuse(checked);\n    else if (name === 'operation') setOperation({ ...operation, [id]: value });\n    else if (name === 'equation') setEquation({ ...equation, [id]: value });\n    else changeInput({ name: 'remove', id: id, value: value });\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    const { id } = event.target;\n    const inputValidity = evaluateValidity(id);\n    setValidity({ ...validity, [id]: inputValidity });\n    if (inputValidity) changeInput({ name: 'equation', id: id });\n  }\n\n  return (\n    <div>\n      <h1 className=\"title\"> Animations </h1>\n      <Animation\n        width={width}\n        height={height}\n        tmax={tmax}\n        reuse={reuse}\n        condition={condition} />\n      <br />\n      <Form\n        tmax={tmax}\n        reuse={reuse}\n        equation={equation}\n        validity={validity}\n        component={component}\n        handleChange={handleChange}\n        handleSubmit={handleSubmit} /> \n    </div>\n  );\n}\n\nexport default App;\n\n// interesting conditions\n// \n// x = (i / 4) % ctx.canvas.width;\n// y = Math.floor((i / 4) / ctx.canvas.width);\n// x = x - width / 2;\n// y = height / 2 - y;\n\n// Math.sin(x*Math.pow(t, 0.2)) > Math.cos(y*Math.pow(t, 0.2))\n// && x*x + y*y < t*t\n\n// x*y*Math.sin(x*y) > t*t\n\n// Math.abs(x*y) > t\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}